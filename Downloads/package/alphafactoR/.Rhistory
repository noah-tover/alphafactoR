library(devtools)
use_package('xts')
#'
#' @param price A numeric matrix or xts object.
#' @param factors A list containing strings corresponding to function names to call.
#' @param arguments A list of lists containing corresponding arguments to each function. If no arguments are specified, an empty list must exist for that function.
#' @param lag Specifies whether or not to lag all columns by one. Defaults to true.
#'
#' @return Returns a list of xts resulting from the functions specified in the factors list.
#'
#' @examples factorapply(price = assets, functions = list("runSum", )
## TODO: Use tryCatch to allow user to input correct arguments given arguments are invalid for ith
use_package('xts')
factorapply()
factorapply()
devtools::load_all(".")
factorapply()
?factorapply()
devtools::load_all(".")
?bucket_performance
bucket_performance()
?bucket_performance
?factorapply
?trim_max_lookbacl
?trim_max_lookback
?trim_max_lookback
?factor_rank
use_package('quantmod')
library(quantmod)
View(system.file)
tickers <- c("JPM", "BAC", "C", "WFC", "GS", "MS", "USB", "PNC", "COF", "STI", "FITB", "KEY", "MTB", "RF", "CFG", "HBAN", "ZION", "CMA", 'HOOD', 'SOFI', 'ALLY')
tickers <- c("JPM", "BAC", "C", "WFC", "GS", "MS", "USB", "PNC", "COF", "STI", "FITB", "KEY", "MTB", "RF", "CFG", "HBAN", "ZION", "CMA", 'HOOD', 'SOFI', 'ALLY')
from <- '2015-01-01'
to = '2023-01-01'
getSymbols(tickers, from = from, to = to, src = 'yahoo')
assets <- Ad(base::Reduce(cbind, lapply(tickers, get)))
assets <- na.approx(assets)
usethis::use_data(assets)
use_r('data')
library(devtools)
use_r('data')
library(devtools)
use_vignette("Introduction to alphafactoR")
use_vignette(intro_to_alphafactoR, title = 'Introduction to alphafactoR')
use_vignette('intro_to_alphafactoR', title = 'Introduction to alphafactoR')
help(package = 'devtools')
help(package = 'devtools')
library(alphafactoR)
library(TTR)
price_data <- data(assets)
# This demonstrates the structure of these functions. To avoid complication via looping, I will only use a single column.
str(TTR::momentum(price_data[,1], n = 5))
head(price_data[,1])
head(price_data)
library(alphafactoR)
price_data <- data(assets)
factorapply()
